name: build and deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: environment to deploy to
        required: true
        options:
          - qa-1
          - qa-2
          - stag
          - prod

  push:
    branches:
      - main

  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  build:
    uses: iccowan/reusable-workflows-test/.github/workflows/build.yml@main
    with:
      artifact-name: 'deploy-artifact-v1'

  qa-1:
    uses: iccowan/reusable-workflows-test/.github/workflows/deploy.yml@main
    with:
      environment: 'qa-1'
      artifact-name: 'deploy-artifact-v1'
    secrets:
      dir: ${{ secrets.DIR }}
      host: ${{ secrets.SSH_HOST }}
      port: ${{ secrets.SSH_PORT }}
      user: ${{ secrets.SSH_USER }}
      key: ${{ secrets.SSH_KEY }}

    needs: build
    if: ${{ github.event.inputs.environment == 'qa-1' }}

  qa-2:
    uses: iccowan/reusable-workflows-test/.github/workflows/deploy.yml@main
    with:
      environment: 'qa-2'
      artifact-name: 'deploy-artifact-v1'
    secrets:
      dir: ${{ secrets.DIR }}
      host: ${{ secrets.SSH_HOST }}
      port: ${{ secrets.SSH_PORT }}
      user: ${{ secrets.SSH_USER }}
      key: ${{ secrets.SSH_KEY }}

    needs: build
    if: ${{ github.event.inputs.environment == 'qa-2' }}

  stag:
    uses: iccowan/reusable-workflows-test/.github/workflows/deploy.yml@main
    with:
      environment: 'stag'
      artifact-name: 'deploy-artifact-v1'
    secrets:
      dir: ${{ secrets.DIR }}
      host: ${{ secrets.SSH_HOST }}
      port: ${{ secrets.SSH_PORT }}
      user: ${{ secrets.SSH_USER }}
      key: ${{ secrets.SSH_KEY }}

    needs: build
    if: ${{ github.event.inputs.environment == 'stag' || (github.ref == 'refs/heads/main' && github.event_name != 'workflow_dispatch') }}

  prod:
    uses: iccowan/reusable-workflows-test/.github/workflows/deploy.yml@main
    with:
      environment: 'prod'
      artifact-name: 'deploy-artifact-v1'
    secrets:
      dir: ${{ secrets.DIR }}
      host: ${{ secrets.SSH_HOST }}
      port: ${{ secrets.SSH_PORT }}
      user: ${{ secrets.SSH_USER }}
      key: ${{ secrets.SSH_KEY }}

    needs: build
    if: ${{ github.event.inputs.environment == 'prod' }}

